{"id":"8fkw","dependencies":[{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/package.json","includedInParent":true,"mtime":1545675554786},{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/.babelrc","includedInParent":true,"mtime":1545599562417},{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/refractor/package.json","includedInParent":true,"mtime":1544903242993},{"name":"./c.js","loc":{"line":2,"column":25},"parent":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/refractor/lang/cpp.js","resolved":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/refractor/lang/c.js"}],"generated":{"js":"\"use strict\";var t=require(\"./c.js\");function e(e){e.register(t),e.languages.cpp=e.languages.extend(\"c\",{keyword:/\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,boolean:/\\b(?:true|false)\\b/,operator:/--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/}),e.languages.insertBefore(\"cpp\",\"keyword\",{\"class-name\":{pattern:/(class\\s+)\\w+/i,lookbehind:!0}}),e.languages.insertBefore(\"cpp\",\"string\",{\"raw-string\":{pattern:/R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,alias:\"string\",greedy:!0}})}module.exports=e,e.displayName=\"cpp\",e.aliases=[];","map":{"mappings":[{"source":"node_modules/refractor/lang/cpp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":2,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":2,"column":0},"generated":{"line":1,"column":17}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":2,"column":0},"generated":{"line":1,"column":19}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":2,"column":0},"generated":{"line":1,"column":27}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":6,"column":0},"generated":{"line":1,"column":37}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":6,"column":0},"generated":{"line":1,"column":46}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":6,"column":0},"generated":{"line":1,"column":48}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":7,"column":0},"generated":{"line":1,"column":51}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":7,"column":0},"generated":{"line":1,"column":53}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":7,"column":0},"generated":{"line":1,"column":62}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":8,"column":0},"generated":{"line":1,"column":65}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":8,"column":0},"generated":{"line":1,"column":67}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":8,"column":0},"generated":{"line":1,"column":77}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":8,"column":0},"generated":{"line":1,"column":81}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":8,"column":0},"generated":{"line":1,"column":83}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":8,"column":0},"generated":{"line":1,"column":93}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":8,"column":0},"generated":{"line":1,"column":100}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":8,"column":0},"generated":{"line":1,"column":104}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":9,"column":0},"generated":{"line":1,"column":105}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":9,"column":0},"generated":{"line":1,"column":113}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":10,"column":0},"generated":{"line":1,"column":719}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":10,"column":0},"generated":{"line":1,"column":727}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":11,"column":0},"generated":{"line":1,"column":748}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":11,"column":0},"generated":{"line":1,"column":757}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":13,"column":0},"generated":{"line":1,"column":902}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":13,"column":0},"generated":{"line":1,"column":904}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":13,"column":0},"generated":{"line":1,"column":914}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":13,"column":0},"generated":{"line":1,"column":927}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":13,"column":0},"generated":{"line":1,"column":933}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":13,"column":0},"generated":{"line":1,"column":943}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":14,"column":0},"generated":{"line":1,"column":944}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":14,"column":0},"generated":{"line":1,"column":957}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":15,"column":0},"generated":{"line":1,"column":958}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":15,"column":0},"generated":{"line":1,"column":966}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":16,"column":0},"generated":{"line":1,"column":983}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":16,"column":0},"generated":{"line":1,"column":995}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":19,"column":0},"generated":{"line":1,"column":1000}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":19,"column":0},"generated":{"line":1,"column":1002}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":19,"column":0},"generated":{"line":1,"column":1012}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":19,"column":0},"generated":{"line":1,"column":1025}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":19,"column":0},"generated":{"line":1,"column":1031}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":19,"column":0},"generated":{"line":1,"column":1040}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":20,"column":0},"generated":{"line":1,"column":1041}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":20,"column":0},"generated":{"line":1,"column":1054}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":21,"column":0},"generated":{"line":1,"column":1055}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":21,"column":0},"generated":{"line":1,"column":1063}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":22,"column":0},"generated":{"line":1,"column":1099}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":22,"column":0},"generated":{"line":1,"column":1105}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":23,"column":0},"generated":{"line":1,"column":1114}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":23,"column":0},"generated":{"line":1,"column":1122}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":3,"column":0},"generated":{"line":1,"column":1127}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":3,"column":0},"generated":{"line":1,"column":1134}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":3,"column":0},"generated":{"line":1,"column":1142}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":4,"column":0},"generated":{"line":1,"column":1144}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":4,"column":0},"generated":{"line":1,"column":1146}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":4,"column":0},"generated":{"line":1,"column":1158}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":5,"column":0},"generated":{"line":1,"column":1164}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":5,"column":0},"generated":{"line":1,"column":1166}},{"source":"node_modules/refractor/lang/cpp.js","original":{"line":5,"column":0},"generated":{"line":1,"column":1174}}],"sources":{"node_modules/refractor/lang/cpp.js":"'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = cpp\ncpp.displayName = 'cpp'\ncpp.aliases = []\nfunction cpp(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    keyword: /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: /--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n  })\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'class-name': {\n      pattern: /(class\\s+)\\w+/i,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('cpp', 'string', {\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  })\n}\n"},"lineCount":null}},"hash":"5c40e953e48f0eeca2bb454c4d93c4d2","cacheData":{"env":{}}}