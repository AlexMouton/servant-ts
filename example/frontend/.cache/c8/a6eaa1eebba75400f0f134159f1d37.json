{"id":"PzpL","dependencies":[{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/tsconfig.json","includedInParent":true,"mtime":1545600954227},{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/.babelrc","includedInParent":true,"mtime":1545599562417},{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/package.json","includedInParent":true,"mtime":1545675554786}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.getApiLiteral=function(){return'data User = \\n  User\\n    {name    :: Text\\n    ,age     :: Int\\n    ,isAdmin :: Bool\\n    ,hasMI   :: Maybe Text\\n    } deriving (Generic, TypescriptType)\\n\\ntype SimpleAPI =\\n       \"user\" :> Get \\'[JSON] [User]\\n  :<|> \"user\" :> Capture \"userId\" Int :> Get \\'[JSON] User\\n  '},exports.getTSTypes=function(){return\"interface User {\\n    name : string\\n    age : number\\n    isAdmin : boolean\\n    hasMI : Option<string>\\n}\\n  \"},exports.getTSFunctions=function(){return\"function getUser(): Promise<Array<User>> {\\n  return fetch(withRemoteBaseUrl(`user`))\\n}\\n\\nfunction getUserByUserId(userId : number): Promise<User> {\\n  return fetch(withRemoteBaseUrl(`user/${userId}`))\\n}\\n  \"};","map":{"mappings":[{"source":"src/server/api.tsx","name":null,"original":{"line":28,"column":13},"generated":{"line":1,"column":0}},{"source":"src/server/api.tsx","name":null,"original":{"line":28,"column":13},"generated":{"line":1,"column":13}},{"source":"src/server/api.tsx","name":null,"original":{"line":28,"column":13},"generated":{"line":1,"column":20}},{"source":"src/server/api.tsx","name":null,"original":{"line":28,"column":13},"generated":{"line":1,"column":35}},{"source":"src/server/api.tsx","name":null,"original":{"line":28,"column":13},"generated":{"line":1,"column":43}},{"source":"src/server/api.tsx","name":null,"original":{"line":28,"column":13},"generated":{"line":1,"column":56}},{"source":"src/server/api.tsx","name":null,"original":{"line":28,"column":13},"generated":{"line":1,"column":57}},{"source":"src/server/api.tsx","name":null,"original":{"line":28,"column":13},"generated":{"line":1,"column":64}},{"source":"src/server/api.tsx","name":null,"original":{"line":1,"column":13},"generated":{"line":1,"column":68}},{"source":"src/server/api.tsx","name":null,"original":{"line":1,"column":13},"generated":{"line":1,"column":76}},{"source":"src/server/api.tsx","name":null,"original":{"line":1,"column":29},"generated":{"line":1,"column":90}},{"source":"src/server/api.tsx","name":null,"original":{"line":1,"column":29},"generated":{"line":1,"column":101}},{"source":"src/server/api.tsx","name":null,"original":{"line":1,"column":29},"generated":{"line":1,"column":107}},{"source":"src/server/api.tsx","name":null,"original":{"line":17,"column":13},"generated":{"line":1,"column":388}},{"source":"src/server/api.tsx","name":null,"original":{"line":17,"column":13},"generated":{"line":1,"column":396}},{"source":"src/server/api.tsx","name":null,"original":{"line":17,"column":26},"generated":{"line":1,"column":407}},{"source":"src/server/api.tsx","name":null,"original":{"line":17,"column":26},"generated":{"line":1,"column":418}},{"source":"src/server/api.tsx","name":null,"original":{"line":17,"column":26},"generated":{"line":1,"column":424}},{"source":"src/server/api.tsx","name":null,"original":{"line":28,"column":13},"generated":{"line":1,"column":539}},{"source":"src/server/api.tsx","name":null,"original":{"line":28,"column":13},"generated":{"line":1,"column":547}},{"source":"src/server/api.tsx","name":null,"original":{"line":28,"column":30},"generated":{"line":1,"column":562}},{"source":"src/server/api.tsx","name":null,"original":{"line":28,"column":30},"generated":{"line":1,"column":573}},{"source":"src/server/api.tsx","name":null,"original":{"line":28,"column":30},"generated":{"line":1,"column":579}}],"sources":{"src/server/api.tsx":"export const getApiLiteral = (): string => (\n  `data User = \n  User\n    {name    :: Text\n    ,age     :: Int\n    ,isAdmin :: Bool\n    ,hasMI   :: Maybe Text\n    } deriving (Generic, TypescriptType)\n\ntype SimpleAPI =\n       \"user\" :> Get '[JSON] [User]\n  :<|> \"user\" :> Capture \"userId\" Int :> Get '[JSON] User\n  `\n)\n\n\nexport const getTSTypes = (): string => (\n  `interface User {\n    name : string\n    age : number\n    isAdmin : boolean\n    hasMI : Option<string>\n}\n  `\n)\n\n\nexport const getTSFunctions = (): string => (\n  `function getUser(): Promise<Array<User>> {\n  return fetch(withRemoteBaseUrl(\\`user\\`))\n}\n\nfunction getUserByUserId(userId : number): Promise<User> {\n  return fetch(withRemoteBaseUrl(\\`user/\\${userId}\\`))\n}\n  `\n)\n"},"lineCount":null}},"hash":"203a43f317ad4182ccb082389166f063","cacheData":{"env":{}}}