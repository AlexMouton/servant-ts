{"id":"TUQr","dependencies":[{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/rxjs/operators/multicast.js.map","includedInParent":true,"mtime":1544898207315},{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/package.json","includedInParent":true,"mtime":1545675554786},{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/.babelrc","includedInParent":true,"mtime":1545599562417},{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/rxjs/package.json","includedInParent":true,"mtime":1544898207315},{"name":"../observable/ConnectableObservable","loc":{"line":2,"column":38},"parent":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/rxjs/operators/multicast.js","resolved":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/rxjs/observable/ConnectableObservable.js"}],"generated":{"js":"\"use strict\";var t=require(\"../observable/ConnectableObservable\");function e(e,c){return function(n){var o;if(o=\"function\"==typeof e?e:function(){return e},\"function\"==typeof c)return n.lift(new r(o,c));var s=Object.create(n,t.connectableObservableDescriptor);return s.source=n,s.subjectFactory=o,s}}exports.multicast=e;var r=function(){function t(t,e){this.subjectFactory=t,this.selector=e}return t.prototype.call=function(t,e){var r=this.selector,c=this.subjectFactory(),n=r(c).subscribe(t);return n.add(e.subscribe(c)),n},t}();exports.MulticastOperator=r;","map":{"mappings":[{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":13}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":17}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":19}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":5,"column":71},"generated":{"line":1,"column":27}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":1,"column":66}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":1,"column":75}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":33,"column":32},"generated":{"line":1,"column":77}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":34,"column":32},"generated":{"line":1,"column":79}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":1,"column":82}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":1,"column":89}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":35,"column":44},"generated":{"line":1,"column":98}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":1,"column":101}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":36,"column":8},"generated":{"line":1,"column":105}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":1,"column":107}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":1,"column":110}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":37,"column":43},"generated":{"line":1,"column":112}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":37,"column":15},"generated":{"line":1,"column":131}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":38,"column":41},"generated":{"line":1,"column":133}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":40,"column":23},"generated":{"line":1,"column":135}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":41,"column":8},"generated":{"line":1,"column":146}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":41,"column":27},"generated":{"line":1,"column":153}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":45,"column":28},"generated":{"line":1,"column":156}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":45,"column":15},"generated":{"line":1,"column":175}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":46,"column":6},"generated":{"line":1,"column":177}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":46,"column":13},"generated":{"line":1,"column":184}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":46,"column":20},"generated":{"line":1,"column":186}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":46,"column":25},"generated":{"line":1,"column":191}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":46,"column":29},"generated":{"line":1,"column":195}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":46,"column":47},"generated":{"line":1,"column":197}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":46,"column":63},"generated":{"line":1,"column":199}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":1,"column":203}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":49,"column":10},"generated":{"line":1,"column":207}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":49,"column":29},"generated":{"line":1,"column":209}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":49,"column":36},"generated":{"line":1,"column":216}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":49,"column":43},"generated":{"line":1,"column":223}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":49,"column":51},"generated":{"line":1,"column":225}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":49,"column":51},"generated":{"line":1,"column":227}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":1,"column":260}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":1,"column":267}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":50,"column":16},"generated":{"line":1,"column":269}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":50,"column":25},"generated":{"line":1,"column":276}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":1,"column":278}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":51,"column":16},"generated":{"line":1,"column":280}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":51,"column":33},"generated":{"line":1,"column":295}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":53,"column":38},"generated":{"line":1,"column":297}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":33,"column":16},"generated":{"line":1,"column":300}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":33,"column":16},"generated":{"line":1,"column":308}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":33,"column":25},"generated":{"line":1,"column":318}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":320}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":324}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":326}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":58,"column":2},"generated":{"line":1,"column":337}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":58,"column":2},"generated":{"line":1,"column":346}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":58,"column":22},"generated":{"line":1,"column":348}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":59,"column":22},"generated":{"line":1,"column":350}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":58,"column":22},"generated":{"line":1,"column":353}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":58,"column":22},"generated":{"line":1,"column":358}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":58,"column":22},"generated":{"line":1,"column":373}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":59,"column":22},"generated":{"line":1,"column":375}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":59,"column":22},"generated":{"line":1,"column":380}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":59,"column":22},"generated":{"line":1,"column":389}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":1,"column":391}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":1,"column":398}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":1,"column":400}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":1,"column":410}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":1,"column":415}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":61,"column":7},"generated":{"line":1,"column":424}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":61,"column":34},"generated":{"line":1,"column":426}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":62,"column":12},"generated":{"line":1,"column":429}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":62,"column":12},"generated":{"line":1,"column":433}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":62,"column":12},"generated":{"line":1,"column":435}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":62,"column":12},"generated":{"line":1,"column":440}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":63,"column":10},"generated":{"line":1,"column":449}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":63,"column":20},"generated":{"line":1,"column":451}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":63,"column":25},"generated":{"line":1,"column":456}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":64,"column":10},"generated":{"line":1,"column":473}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":64,"column":25},"generated":{"line":1,"column":475}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":64,"column":34},"generated":{"line":1,"column":477}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":64,"column":43},"generated":{"line":1,"column":480}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":64,"column":53},"generated":{"line":1,"column":490}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":66,"column":4},"generated":{"line":1,"column":493}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":1,"column":500}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":65,"column":17},"generated":{"line":1,"column":502}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":65,"column":21},"generated":{"line":1,"column":506}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":65,"column":28},"generated":{"line":1,"column":508}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":65,"column":38},"generated":{"line":1,"column":518}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":66,"column":11},"generated":{"line":1,"column":522}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":1,"column":525}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":527}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":57,"column":13},"generated":{"line":1,"column":530}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":57,"column":13},"generated":{"line":1,"column":538}},{"source":"../../src/operators/multicast.ts","name":null,"original":{"line":57,"column":30},"generated":{"line":1,"column":556}}],"sources":{"../../src/operators/multicast.ts":"import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { FactoryOrValue, MonoTypeOperatorFunction, OperatorFunction, UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subjectOrSubjectFactory: FactoryOrValue<Subject<T>>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: OperatorFunction<T, R>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n"},"lineCount":null}},"hash":"d2003a4be5321c856079fee69e882e83","cacheData":{"env":{}}}