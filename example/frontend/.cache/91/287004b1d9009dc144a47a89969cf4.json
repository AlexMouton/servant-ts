{"id":"6eSH","dependencies":[{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/rxjs/observable/EmptyObservable.js.map","includedInParent":true,"mtime":1544898207315},{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/package.json","includedInParent":true,"mtime":1545675554786},{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/.babelrc","includedInParent":true,"mtime":1545599562417},{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/rxjs/package.json","includedInParent":true,"mtime":1544898207315},{"name":"../Observable","loc":{"line":7,"column":27},"parent":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/rxjs/observable/EmptyObservable.js","resolved":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/rxjs/Observable.js"}],"generated":{"js":"\"use strict\";var e=this&&this.__extends||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);function s(){this.constructor=e}e.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)},t=require(\"../Observable\"),r=function(t){function r(e){t.call(this),this.scheduler=e}return e(r,t),r.create=function(e){return new r(e)},r.dispatch=function(e){e.subscriber.complete()},r.prototype._subscribe=function(e){var t=this.scheduler;if(t)return t.schedule(r.dispatch,0,{subscriber:e});e.complete()},r}(t.Observable);exports.EmptyObservable=r;","map":{"mappings":[{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":206}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":208}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":3,"column":27},"generated":{"line":1,"column":216}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":1,"column":233}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":1,"column":235}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":1,"column":244}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":1,"column":247}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":1,"column":256}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":69,"column":22},"generated":{"line":1,"column":258}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":70,"column":4},"generated":{"line":1,"column":261}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":70,"column":4},"generated":{"line":1,"column":263}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":70,"column":4},"generated":{"line":1,"column":268}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":69,"column":22},"generated":{"line":1,"column":274}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":69,"column":22},"generated":{"line":1,"column":279}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":69,"column":22},"generated":{"line":1,"column":289}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":83,"column":0},"generated":{"line":1,"column":291}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":15,"column":40},"generated":{"line":1,"column":298}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":15,"column":40},"generated":{"line":1,"column":300}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":15,"column":40},"generated":{"line":1,"column":302}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":60,"column":9},"generated":{"line":1,"column":305}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":60,"column":9},"generated":{"line":1,"column":307}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":60,"column":2},"generated":{"line":1,"column":314}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":60,"column":19},"generated":{"line":1,"column":323}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":61,"column":4},"generated":{"line":1,"column":326}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":61,"column":11},"generated":{"line":1,"column":333}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":61,"column":15},"generated":{"line":1,"column":337}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":61,"column":34},"generated":{"line":1,"column":339}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":64,"column":9},"generated":{"line":1,"column":343}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":64,"column":9},"generated":{"line":1,"column":345}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":64,"column":2},"generated":{"line":1,"column":354}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":64,"column":21},"generated":{"line":1,"column":363}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":65,"column":12},"generated":{"line":1,"column":366}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":65,"column":12},"generated":{"line":1,"column":368}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":66,"column":15},"generated":{"line":1,"column":379}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":73,"column":39},"generated":{"line":1,"column":391}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":73,"column":39},"generated":{"line":1,"column":393}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":73,"column":39},"generated":{"line":1,"column":403}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":73,"column":39},"generated":{"line":1,"column":414}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":73,"column":50},"generated":{"line":1,"column":423}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":75,"column":4},"generated":{"line":1,"column":426}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":75,"column":10},"generated":{"line":1,"column":430}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":75,"column":22},"generated":{"line":1,"column":432}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":75,"column":27},"generated":{"line":1,"column":437}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":77,"column":4},"generated":{"line":1,"column":447}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":77,"column":8},"generated":{"line":1,"column":450}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":78,"column":6},"generated":{"line":1,"column":452}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":78,"column":13},"generated":{"line":1,"column":459}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":78,"column":23},"generated":{"line":1,"column":461}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":78,"column":32},"generated":{"line":1,"column":470}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":78,"column":48},"generated":{"line":1,"column":472}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":78,"column":58},"generated":{"line":1,"column":481}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":78,"column":61},"generated":{"line":1,"column":483}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":78,"column":63},"generated":{"line":1,"column":484}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":78,"column":63},"generated":{"line":1,"column":495}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":80,"column":6},"generated":{"line":1,"column":499}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":80,"column":17},"generated":{"line":1,"column":501}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":83,"column":0},"generated":{"line":1,"column":513}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":1,"column":515}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":15,"column":40},"generated":{"line":1,"column":516}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":15,"column":40},"generated":{"line":1,"column":518}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":15,"column":13},"generated":{"line":1,"column":530}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":15,"column":13},"generated":{"line":1,"column":538}},{"source":"../../src/observable/EmptyObservable.ts","name":null,"original":{"line":15,"column":28},"generated":{"line":1,"column":554}}],"sources":{"../../src/observable/EmptyObservable.ts":"import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n"},"lineCount":null}},"hash":"880d815be94b7415c060d1b0780d6bff","cacheData":{"env":{}}}