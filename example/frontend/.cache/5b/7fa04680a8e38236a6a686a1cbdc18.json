{"id":"ovNM","dependencies":[{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/rxjs/operator/startWith.js.map","includedInParent":true,"mtime":1544898207315},{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/package.json","includedInParent":true,"mtime":1545675554786},{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/.babelrc","includedInParent":true,"mtime":1545599562417},{"name":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/rxjs/package.json","includedInParent":true,"mtime":1544898207315},{"name":"../operators/startWith","loc":{"line":2,"column":26},"parent":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/rxjs/operator/startWith.js","resolved":"/Users/stevenmaccoun/projects/servant-ts/example/frontend/node_modules/rxjs/operators/startWith.js"}],"generated":{"js":"\"use strict\";var t=require(\"../operators/startWith\");function r(){for(var r=[],i=0;i<arguments.length;i++)r[i-0]=arguments[i];return t.startWith.apply(void 0,r)(this)}exports.startWith=r;","map":{"mappings":[{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":13}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":17}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":19}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":3,"column":41},"generated":{"line":1,"column":27}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":1,"column":53}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":1,"column":62}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":70}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":74}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":76}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":79}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":81}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":83}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":85}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":95}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":102}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":106}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":108}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":110}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":113}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":50},"generated":{"line":1,"column":123}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":1,"column":126}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":133}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":135}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":30,"column":20},"generated":{"line":1,"column":145}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":30,"column":20},"generated":{"line":1,"column":156}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":1,"column":158}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":1,"column":160}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":30,"column":31},"generated":{"line":1,"column":161}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":16},"generated":{"line":1,"column":167}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":16},"generated":{"line":1,"column":175}},{"source":"../../src/operator/startWith.ts","name":null,"original":{"line":29,"column":25},"generated":{"line":1,"column":185}}],"sources":{"../../src/operator/startWith.ts":"import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { startWith as higherOrder } from '../operators/startWith';\n\n/* tslint:disable:max-line-length */\nexport function startWith<T>(this: Observable<T>, v1: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, v3: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, v3: T, v4: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, v3: T, v4: T, v5: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, v3: T, v4: T, v5: T, v6: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, ...array: Array<T | IScheduler>): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T>(this: Observable<T>, ...array: Array<T | IScheduler>): Observable<T> {\n  return higherOrder(...array)(this);\n}\n"},"lineCount":null}},"hash":"1355641dbfadd680e479320cf3561969","cacheData":{"env":{}}}